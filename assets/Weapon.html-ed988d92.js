import{_ as u}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as i,a as l,b as t,d,w as o,e}from"./app-e2ab8ebb.js";const a={},c=e('<h1 id="weapon" tabindex="-1"><a class="header-anchor" href="#weapon" aria-hidden="true">#</a> Weapon</h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>武器的基础类，是建构一个武器的基础</p><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h2><p>套用在武器物体的最顶层层级，附属物体下挂在这个物体里面</p>',5),_=e('<h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><p>此组件使用了一个Audio Source组件作为依赖项，请将开火音效置于此组件（如果是自动武器请勾选Audio Source的Loop，注意不要勾选Play on Awake！）</p><p>此外请避免装载有Weapon组件的物体上并排存在多个Audio Source组件，这会导致音效冲突+游戏报错</p><p>解决方法是武器内新建空物体再另外挂载一个Audio Source</p><p>此组件对应的可用动画机Parameters：</p><table><thead><tr><th>原名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>loaded ammo</td><td>int</td><td>已装载的弹药数</td></tr><tr><td>unholster</td><td>trigger</td><td>切换到武器时为True</td></tr><tr><td>tuck</td><td>bool</td><td>冲刺且没有换弹行为时为True</td></tr><tr><td>muzzle</td><td>int</td><td>开火时等于目前武器所处的枪口序号（默认0开始）之后+1，以此类推（如果当前武器枪口数量小于1或勾选fireFromAllMuzzles选项将忽略此条件）</td></tr><tr><td>alt weapon</td><td>int</td><td>当武器动画激活或切换到子武器时，等于目前子武器所处的序号（0=处于主武器，默认1开始）</td></tr><tr><td>charging</td><td>bool</td><td>处于充能状态时为True</td></tr><tr><td>overheat</td><td>bool</td><td>过热时为True</td></tr><tr><td>sight mode</td><td>int</td><td>等于目前玩家所处的瞄准模式（默认0开始）</td></tr><tr><td>smooth sight mode</td><td>float</td><td>等于目前玩家所处的瞄准模式（与sight mode等同，适用于BlenderTree）</td></tr><tr><td>fire</td><td>trigger</td><td>开火时为True</td></tr><tr><td>aim</td><td>bool</td><td>瞄准时为True，其余状态为False</td></tr><tr><td>reload</td><td>trigger</td><td>装填时为True</td></tr><tr><td>reloading</td><td>bool</td><td>启用高级换弹选项后，装填时为True</td></tr><tr><td>reload motion</td><td>int</td><td>启用高级换弹选项后，按照allowedReloads的顺序，等于本次装载行为对应的弹药数量</td></tr><tr><td>no ammo</td><td>bool</td><td>在弹药数量发生变化或当武器动画激活时，武器当前弹夹和备弹都没有弹药时为True</td></tr><tr><td>no ammo blend</td><td>float</td><td>在弹药数量发生变化或当武器动画激活时，武器拥有弹药（当前弹夹或备弹其一满足条件即可）时为0，否则为1</td></tr><tr><td>kick</td><td>trigger</td><td>踢人时为True</td></tr><tr><td>call</td><td>trigger</td><td>召集队员时为True</td></tr><tr><td>direct</td><td>trigger</td><td>指挥队员时为True</td></tr><tr><td>random</td><td>float</td><td>在切换到武器时或每帧随机生成一个0到100的浮点值</td></tr></tbody></table><p>对于此组件的子组件，部分选项是不可用的，请按照逻辑判断</p><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2>',8),h=l("thead",null,[l("tr",null,[l("th",null,"名称"),l("th",null,"类型"),l("th",null,"描述")])],-1),f=l("tr",null,[l("td",null,"displayName"),l("td",null,"string"),l("td",null,"武器在实际UI显示的名称")],-1),m=l("tr",null,[l("td",null,"thirdPersonTransform"),l("td",null,"Transform"),l("td",null,"第三人称显示的武器模型（包括手臂）")],-1),p=l("tr",null,[l("td",null,"thirdPersonOffset"),l("td",null,"Vector3"),l("td",null,"第三人称显示的武器模型位置偏移量（矫正位置）")],-1),g=l("tr",null,[l("td",null,"cullInThirdPerson"),l("td",null,"GameObject[]"),l("td",null,[t("第三人称不显示的游戏物体（"),l("code",null,"Size"),t("=数量。先填写要隐藏的物体数量，再在Element*处拖入物体）")])],-1),b=l("tr",null,[l("td",null,"thirdPersonScale"),l("td",null,"float"),l("td",null,"第三人称显示的武器模型缩放偏移量（矫正位置）")],-1),A=l("tr",null,[l("td",null,"keepScriptsOnThirdPersonImposter"),l("td",null,"bool"),l("td")],-1),S=l("td",null,"reloadAudio",-1),P=l("td",null,"AudioSource",-1),y=l("code",null,"advanceRaload",-1),T=l("tr",null,[l("td",null,"changeFireModeAudio"),l("td",null,"AudioSource"),l("td",null,"切换开火模式的音效")],-1),M=l("tr",null,[l("td",null,"reflectionSound"),l("td",null,"enum.ReflectionSound"),l("td",null,"回音效果（Auto=自动、None=无、Handgun=手枪、RifleSmall=小步枪、RifleLarge=大步枪、Launcher=炮、Tank=坦克）")],-1),R=l("tr",null,[l("td",null,"keepScriptsOnThirdPersonImposter"),l("td",null,"bool"),l("td")],-1),v=l("tr",null,[l("td",null,"reflectionVolume"),l("td",null,"float"),l("td",null,"回音效果大小")],-1),w=l("tr",null,[l("td",null,"walkBobMultiplier"),l("td",null,"float"),l("td",null,"走路时晃动倍数")],-1),k=l("tr",null,[l("td",null,"sprintBobMultiplier"),l("td",null,"float"),l("td",null,"跑步时晃动倍数")],-1),B=l("tr",null,[l("td",null,"proneBobMultiplier"),l("td",null,"float"),l("td",null,"趴下时晃动倍数")],-1),z=l("tr",null,[l("td",null,"uiSprite"),l("td",null,"Sprite"),l("td",null,"武器图标")],-1),E=l("tr",null,[l("td",null,"arms"),l("td",null,"SkinnedMeshRenderer"),l("td",null,"武器动画的手臂模型（场景层级内的！包含骨骼，默认名为“Hands“）")],-1),x=l("tr",null,[l("td",null,"allowArmMeshReplacement"),l("td",null,"bool"),l("td",null,"是否允许实际游戏时玩家皮肤替换手部皮肤")],-1),C=l("td",null,"parentWeapon",-1),I=l("td",null,"父武器（有子武器时可用，子武器就是Weapon物体里再套一个Weapon）",-1),N=l("tr",null,[l("td",null,"useParentWeaponSightModes"),l("td",null,"bool"),l("td",null,[t("使用父武器的"),l("code",null,"sightModes")])],-1),F=l("tr",null,[l("td",null,"ammo"),l("td",null,"int"),l("td",null,"武器装载的弹药数（如武器无此弹药逻辑则设为-1）")],-1),W=l("tr",null,[l("td",null,"isLocked"),l("td",null,"bool"),l("td",null,"是否该锁定武器")],-1),D=l("tr",null,[l("td",null,"auto"),l("td",null,"bool"),l("td",null,"是否为自动武器（影响开火是否为连发还是单发，影响开火音效是即时停止还是直接播放完音效）")],-1),H=l("tr",null,[l("td",null,"spareAmmo"),l("td",null,"int"),l("td",null,"武器备用的弹药数（如武器无此弹药逻辑则设为-1")],-1),j=l("tr",null,[l("td",null,"resupplyNumber"),l("td",null,"int"),l("td",null,"每次从补给箱补充的弹药数")],-1),G=l("tr",null,[l("td",null,"reloadTime"),l("td",null,"float"),l("td",null,[t("装填所需时间（启用"),l("code",null,"advanceReload"),t("时不可用）")])],-1),V=l("tr",null,[l("td",null,"cooldown"),l("td",null,"float"),l("td",null,"开火时连续两发子弹的间隔（开火速度，值越小越快）")],-1),L=l("tr",null,[l("td",null,"unholsterTime"),l("td",null,"float"),l("td",null,"切换到武器时所用时间")],-1),O=l("tr",null,[l("td",null,"unholsterIsReload"),l("td",null,"bool"),l("td",null,"切换到武器的行为是否可以替代装填")],-1),Y=l("tr",null,[l("td",null,"changeFireModeTime"),l("td",null,"float"),l("td",null,"更改开火模式时所用时间")],-1),U=l("tr",null,[l("td",null,"changeFireModeIsReload"),l("td",null,"bool"),l("td",null,"更改开火模式的行为是否可以替代装填")],-1),K=l("tr",null,[l("td",null,"aimFov"),l("td",null,"float"),l("td",null,"瞄准时的视角FoV")],-1),q=l("tr",null,[l("td",null,"forceSniperAimSensitivity"),l("td",null,"bool"),l("td",null,"瞄准时鼠标操作视角的灵敏度")],-1),J=l("tr",null,[l("td",null,"aimSensitivityMultiplier"),l("td",null,"float"),l("td",null,"瞄准灵敏度倍数")],-1),Q=l("tr",null,[l("td",null,"autoReloadDelay"),l("td",null,"float"),l("td",null,"自动装填的延迟")],-1),X=l("tr",null,[l("td",null,"canBeAimedWhileReloading"),l("td",null,"bool"),l("td",null,"装填时是否可以瞄准")],-1),Z=l("tr",null,[l("td",null,"forceAutoReload"),l("td",null,"bool"),l("td",null,"强制自动换弹（如投掷类武器）")],-1),$=l("tr",null,[l("td",null,"loud"),l("td",null,"bool"),l("td",null,"开火造成声音是否响亮（会使武器持有者高亮4秒）")],-1),ll=l("tr",null,[l("td",null,"forceWorldAudioOutput"),l("td",null,"bool"),l("td",null,"强制场景音频输出")],-1),tl=l("tr",null,[l("td",null,"muzzles"),l("td",null,"Transform[]"),l("td",null,[t("枪口（或近战武器攻击点，掷弹点。生成子弹projectiles的地方，"),l("code",null,"Size"),t("=数量。先填写枪口数量，一般为1，再在"),l("code",null,"Element*"),t("处拖入物体。"),l("strong",null,"muzzlesz中指定的物体及此物体的子层级的Particle System组件在在开火时会触发"),t("）")])],-1),nl=l("tr",null,[l("td",null,"optionalThirdPersonMuzzles"),l("td",null,"Transform[]"),l("td",null,"可选的第三人称时的枪口")],-1),dl=l("tr",null,[l("td",null,"casingParticles"),l("td",null,"ParticleSystem[]"),l("td",null,[t("抛壳口（"),l("code",null,"Size"),t("=数量。先填写数量，一般为1，再在"),l("code",null,"Element*"),t("处拖入物体，抛壳次序与"),l("code",null,"muzzles"),t("次序保持一致）")])],-1),ol=l("tr",null,[l("td",null,"fireFromAllMuzzles"),l("td",null,"bool"),l("td",null,"每次开火时所有的枪口是否全部开火（否则按照枪口顺序向下运行）")],-1),el=l("tr",null,[l("td",null,"projectilesPerShot"),l("td",null,"int"),l("td",null,"每次开火会射出多少子弹")],-1),ul=l("tr",null,[l("td",null,"projectilePrefab"),l("td",null,"GameObject"),l("td",null,"子弹的预制件")],-1),rl=l("tr",null,[l("td",null,"scopeAimObject"),l("td",null,"GameObject"),l("td",null,"瞄准时出现的物体（可选，类似狙击时画面外的一圈黑边，聚焦瞄准时的黑边物体。应在场景层级内，机制为游戏时默认在此项设置的物体会禁用，玩家瞄准时会启用）")],-1),sl=l("tr",null,[l("td",null,"kickback"),l("td",null,"float"),l("td",null,"后坐力")],-1),il=l("tr",null,[l("td",null,"randomKick"),l("td",null,"float"),l("td",null,"随机附加后坐的最大值")],-1),al=l("tr",null,[l("td",null,"spread"),l("td",null,"float"),l("td",null,"散布效果")],-1),cl=l("tr",null,[l("td",null,"followupSpreadGain"),l("td",null,"float"),l("td",null,"连发时的散布效果")],-1),_l=l("tr",null,[l("td",null,"followupMaxSpreadHip"),l("td",null,"float"),l("td",null,"（未瞄准时）连发时的散布效果的最大值")],-1),hl=l("tr",null,[l("td",null,"followupMaxSpreadAim"),l("td",null,"float"),l("td",null,"（瞄准时）连发时的散布效果的最大值")],-1),fl=l("tr",null,[l("td",null,"followupSpreadStayTime"),l("td",null,"float"),l("td",null,"连发时的散布效果的持续时间")],-1),ml=l("tr",null,[l("td",null,"followupSpreadDissipateTime"),l("td",null,"float"),l("td",null,"连发时的散布效果的消散时间")],-1),pl=l("tr",null,[l("td",null,"snapMagnitude"),l("td",null,"float"),l("td",null,"开火时武器的上抬幅度")],-1),gl=l("tr",null,[l("td",null,"snapDuration"),l("td",null,"float"),l("td",null,"开火时武器上抬的持续时间")],-1),bl=l("tr",null,[l("td",null,"snapFrequency"),l("td",null,"float"),l("td",null,"开火时武器上抬频率")],-1),Al=l("tr",null,[l("td",null,"kickbackProneMultiplier"),l("td",null,"float"),l("td",null,"趴下时后座倍数")],-1),Sl=l("tr",null,[l("td",null,"spreadProneMultiplier"),l("td",null,"float"),l("td",null,"不精准度倍数")],-1),Pl=l("tr",null,[l("td",null,"followupSpreadProneMultiplier"),l("td",null,"float"),l("td",null,"趴下时后续增加的不精准度倍数")],-1),yl=l("tr",null,[l("td",null,"snapProneMultiplier"),l("td",null,"float"),l("td")],-1),Tl=l("tr",null,[l("td",null,"aiAllowedAimSpread"),l("td",null,"float"),l("td",null,"Bot瞄准不精准度（数值越高，Bot就越容易开火，即使未瞄准）")],-1),Ml=l("tr",null,[l("td",null,"aiAimSwing"),l("td",null,"float"),l("td",null,"Bot的攻击时的瞄准误差")],-1),Rl=l("tr",null,[l("td",null,"effInfantry"),l("td",null,"enum.Effectiveness"),l("td",null,"攻击是否对步兵作用(No, Yes, Preferred)")],-1),vl=l("tr",null,[l("td",null,"effInfantryGroup"),l("td",null,"enum.Effectiveness"),l("td",null,"攻击是否对步兵群作用(No, Yes, Preferred)")],-1),wl=l("tr",null,[l("td",null,"effUnarmored"),l("td",null,"enum.Effectiveness"),l("td",null,"攻击是否对无装甲的载具作用(No, Yes, Preferred)")],-1),kl=l("tr",null,[l("td",null,"effArmored"),l("td",null,"enum.Effectiveness"),l("td",null,"攻击是否对装甲载具作用(No, Yes, Preferred)")],-1),Bl=l("tr",null,[l("td",null,"effAir"),l("td",null,"enum.Effectiveness"),l("td",null,"攻击是否对空中目标作用(No, Yes, Preferred)")],-1),zl=l("tr",null,[l("td",null,"effAirFastMover"),l("td",null,"enum.Effectiveness"),l("td",null,"攻击是否对快速移动的空中目标作用(No, Yes, Preferred)")],-1),El=l("tr",null,[l("td",null,"effectiveRange"),l("td",null,"float"),l("td",null,"攻击有效范围")],-1),xl=l("tr",null,[l("td",null,"diffInfantry"),l("td",null,"enum.Difficulty"),l("td",null,[t("Bot使用此武器攻击步兵的难度(Auto=自动调整,Easy=轻松,Challenging=还行,Hard=困难,Impossible=不可能。"),l("strong",null,"游戏中Bot自动分为Beginner、Normal、Veteran、Elite四个等级，各个级别的实力可从名字体现，武器的攻击难度对于不同级别的Bot是不同的，会削减或增强"),t(")")])],-1),Cl=l("tr",null,[l("td",null,"diffInfantryGroup"),l("td",null,"enum.Difficulty"),l("td",null,"Bot使用此武器攻击步兵群的难度(Auto=自动调整,Easy=轻松,Challenging=还行,Hard=困难,Impossible=不可能)")],-1),Il=l("tr",null,[l("td",null,"diffGroundVehicles"),l("td",null,"enum.Difficulty"),l("td",null,"Bot使用此武器攻击载具的难度(Auto=自动调整,Easy=轻松,Challenging=还行,Hard=困难,Impossible=不可能)")],-1),Nl=l("tr",null,[l("td",null,"diffAir"),l("td",null,"enum.Difficulty"),l("td",null,"Bot使用此武器攻击空中目标的难度(Auto=自动调整,Easy=轻松,Challenging=还行,Hard=困难,Impossible=不可能)")],-1),Fl=l("tr",null,[l("td",null,"diffAirFastMover"),l("td",null,"enum.Difficulty"),l("td",null,"Bot使用此武器攻击快速移动的空中目标的难度(Auto=自动调整,Easy=轻松,Challenging=还行,Hard=困难,Impossible=不可能)")],-1),Wl=l("tr",null,[l("td",null,"haltStrategy"),l("td",null,"enum.HaltStrategy"),l("td",null,"Bot移动时的开火策略（建议不改。Auto=自动调整, Never=移动时始终开火, PreferredLongRange=远距离优先停止移动再开火但近距离依旧开火, PreferredAnyRange=允许边移动边开火跑打但优先停移, AlwaysLongRange=远距离才始终停移但近距离依旧开火, Always=开火时始终停移)")],-1),Dl=l("tr",null,[l("td",null,"pose"),l("td",null,"int"),l("td",null,"第三人称握持武器的姿势(例子：0=AK、1=手雷、2=SMAW)")],-1),Hl=l("tr",null,[l("td",null,"applyHeat"),l("td",null,"bool"),l("td",null,"是否有过热效果")],-1),jl=l("tr",null,[l("td",null,"heatMaterial"),l("td",null,"MaterialTarget"),l("td",null,"过热效果的材质（参考Unity的文档与Prefab,需要自发光材质）")],-1),Gl=l("tr",null,[l("td",null,"heatGainPerShot"),l("td",null,"float"),l("td",null,"每发使武器过热%多少）")],-1),Vl=l("tr",null,[l("td",null,"heatDrainRate"),l("td",null,"float"),l("td",null,"每秒使武器散热%多少")],-1),Ll=l("tr",null,[l("td",null,"heatColor"),l("td",null,"Color"),l("td",null,"过热效果的颜色")],-1),Ol=l("tr",null,[l("td",null,"heatColorGain"),l("td",null,"AnimationCurve"),l("td",null,"过热散热时颜色消失的曲线")],-1),Yl=l("tr",null,[l("td",null,"overheatParticles"),l("td",null,"ParticleSystem"),l("td",null,"过热出现的粒子")],-1),Ul=l("tr",null,[l("td",null,"overheatSound"),l("td",null,"AudioSource"),l("td",null,"过热音效")],-1),Kl=l("tr",null,[l("td",null,"useChargeTime"),l("td",null,"bool"),l("td",null,"武器是否需要充能（蓄力）")],-1),ql=l("tr",null,[l("td",null,"chargeTime"),l("td",null,"float"),l("td",null,"武器充能时间")],-1),Jl=l("tr",null,[l("td",null,"chargeSound"),l("td",null,"AudioSource"),l("td",null,"武器充能音效")],-1),Ql=l("tr",null,[l("td",null,"dropAmmoWhenReloading"),l("td",null,"bool"),l("td",null,"换弹时丢弃剩余弹药")],-1),Xl=l("tr",null,[l("td",null,"maxRemainingAmmoAfterDrop"),l("td",null,"int"),l("td",null,"丢弃弹药后最大剩余弹药")],-1),Zl=l("tr",null,[l("td",null,"useMaxAmmoPerReload"),l("td",null,"bool"),l("td",null,"限制每次换弹的最大装填数")],-1),$l=l("tr",null,[l("td",null,"maxAmmoPerReload"),l("td",null,"int"),l("td",null,[t("每次换弹的最大装填数（与"),l("code",null,"useMaxAmmoPerReload"),t("联动）")])],-1),lt=l("tr",null,[l("td",null,"advancedReload"),l("td",null,"bool"),l("td",null,"是否启用高级装填（用于单\\多发装填武器,需要在AnimationEvent手动调用ReloadDone才能结束装填）")],-1),tt=l("tr",null,[l("td",null,"allowedReloads"),l("td",null,"int[]"),l("td",null,"启用高级装填选项后，换弹时将会按照设定好的顺序，装填对应的弹药数量")],-1),nt=l("tr",null,[l("td",null,"sightModes"),l("td",null,"SightMode[]"),l("td",null,[t("瞄准方式（"),l("code",null,"Sizes"),t("=有多少种瞄准方式；overrideFov=铺满视角；fov=可视范围；name=名称，显示在实际游戏时的HUB中）")])],-1);function dt(ot,et){const n=r("RouterLink");return s(),i("div",null,[c,l("p",null,[t("参考"),d(n,{to:"/cn/Tutorials/wpn.1.html"},{default:o(()=>[t("RFCreator Project")]),_:1})]),_,l("table",null,[h,l("tbody",null,[f,m,p,g,b,A,l("tr",null,[S,P,l("td",null,[t("装填音效(开启"),y,t("时忽略此项，此AudioSource建议放置于武器内的空物体上，参阅"),d(n,{to:"/cn/Tutorials/"},{default:o(()=>[t("RFCreator Project")]),_:1}),t(")")])]),T,M,R,v,w,k,B,z,E,x,l("tr",null,[C,l("td",null,[d(n,{to:"/cn/Components/Weapon.html"},{default:o(()=>[t("Weapon")]),_:1})]),I]),N,F,W,D,H,j,G,V,L,O,Y,U,K,q,J,Q,X,Z,$,ll,tl,nl,dl,ol,el,ul,rl,sl,il,al,cl,_l,hl,fl,ml,pl,gl,bl,Al,Sl,Pl,yl,Tl,Ml,Rl,vl,wl,kl,Bl,zl,El,xl,Cl,Il,Nl,Fl,Wl,Dl,Hl,jl,Gl,Vl,Ll,Ol,Yl,Ul,Kl,ql,Jl,Ql,Xl,Zl,$l,lt,tt,nt])])])}const st=u(a,[["render",dt],["__file","Weapon.html.vue"]]);export{st as default};
