import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as d,c as i,a as t,b as e,d as n,w as o}from"./app-E4KPRz61.js";const s={},u=t("h1",{id:"arcadecar",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#arcadecar"},[t("span",null,"ArcadeCar")])],-1),c=t("h2",{id:"description",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#description"},[t("span",null,"Description")])],-1),h=t("p",null,"Vehicle with physical driving effects",-1),_=t("h2",{id:"usage",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#usage"},[t("span",null,"Usage")])],-1),p=t("p",null,"Please add the Rigidbody component yourself, or you will get an error!",-1),m=t("h2",{id:"comment",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#comment"},[t("span",null,"Comment")])],-1),f=t("h2",{id:"variables",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#variables"},[t("span",null,"Variables")])],-1),g=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Type"),t("th",null,"Description")])],-1),b=t("tr",null,[t("td",null,"reverseTurnType"),t("td",null,"enum.ReverseTurnType"),t("td",null,"(Reverse Speed,Reverse Throttle,Never)")],-1),y=t("tr",null,[t("td",null,"acceleration"),t("td",null,"float"),t("td",null,"acceleration")],-1),v=t("tr",null,[t("td",null,"reverseAcceleration"),t("td",null,"float"),t("td",null,"Reverse acceleration")],-1),k=t("tr",null,[t("td",null,"accelerationTipAmount"),t("td",null,"float"),t("td",null,"Accelerated tilt level")],-1),C=t("tr",null,[t("td",null,"frictionTipAmount"),t("td",null,"float"),t("td",null,"Degree of brake tilt")],-1),A=t("tr",null,[t("td",null,"topSpeed"),t("td",null,"float"),t("td",null,"Maximum speed")],-1),D=t("tr",null,[t("td",null,"speedTurnTorque"),t("td",null,"float"),t("td",null,"Degree of steering by speed")],-1),S=t("tr",null,[t("td",null,"baseTurnTorque"),t("td",null,"float"),t("td",null,"steering level")],-1),T=t("tr",null,[t("td",null,"tankTurning"),t("td",null,"bool"),t("td",null,"Enable tank steering (steering in place)")],-1),x=t("tr",null,[t("td",null,"slideDrag"),t("td",null,"float"),t("td",null,"Lateral resistance")],-1),B=t("tr",null,[t("td",null,"brakeDrag"),t("td",null,"float"),t("td",null,"Brake Resistance")],-1),R=t("tr",null,[t("td",null,"driftByAcceleration"),t("td",null,"bool"),t("td",null,"Accelerated drift (really didn't feel like it was that noticeable)")],-1),V=t("tr",null,[t("td",null,"brakeAccelerationTriggerSpeed"),t("td",null,"float"),t("td",null,"Minimum trigger speed for brake drift")],-1),w=t("tr",null,[t("td",null,"driftByBrake"),t("td",null,"bool"),t("td",null,"Enable brake-drift")],-1),N=t("tr",null,[t("td",null,"brakeDriftMinSpeed"),t("td",null,"float"),t("td",null,"Brake Drift Minimum Speed")],-1),L=t("tr",null,[t("td",null,"driftingSlip"),t("td",null,"float"),t("td")],-1),M=t("tr",null,[t("td",null,"driftDuration"),t("td",null,"float"),t("td",null,"Drift Duration")],-1),U=t("tr",null,[t("td",null,"isAmphibious"),t("td",null,"bool"),t("td",null,"The vehicle is amphibious.")],-1),z=t("tr",null,[t("td",null,"extraStability"),t("td",null,"float"),t("td",null,"Additional stability (affects center of gravity)")],-1),E=t("tr",null,[t("td",null,"groundDrag"),t("td",null,"float"),t("td",null,"ground resistance")],-1),P=t("tr",null,[t("td",null,"groundAngularDrag"),t("td",null,"float"),t("td",null,"ground angular resistance")],-1),Z=t("tr",null,[t("td",null,"groundSteeringDrag"),t("td",null,"float"),t("td",null,"Ground steering resistance")],-1),q=t("tr",null,[t("td",null,"airDrag"),t("td",null,"float"),t("td",null,"atmospheric drag")],-1),j=t("tr",null,[t("td",null,"airAngularDrag"),t("td",null,"float"),t("td",null,"Angular resistance of air (acting on angular velocity?)")],-1),G=t("tr",null,[t("td",null,"downforcePerSpeed"),t("td",null,"float"),t("td",null,"Downward force that varies by velocity (velocity, directional, not speed)")],-1),J=t("td",null,"suspensionShiftSounds",-1),O=t("td",null,"Suspended sound effects",-1),F=t("td",null,"brakeSounds",-1),H=t("td",null,"Brake Sound",-1);function I(K,Q){const l=a("RouteLink");return d(),i("div",null,[u,c,t("p",null,[e("Derived from "),n(l,{to:"/en/Components/Vehicle.html"},{default:o(()=>[e("Vehicle")]),_:1})]),h,_,t("p",null,[e("Refer "),n(l,{to:"/en/Components/Vehicle.html"},{default:o(()=>[e("Vehicle")]),_:1})]),p,m,f,t("table",null,[g,t("tbody",null,[b,y,v,k,C,A,D,S,T,x,B,R,V,w,N,L,M,U,z,E,P,Z,q,j,G,t("tr",null,[J,t("td",null,[n(l,{to:"/en/Components/SoundBank.html"},{default:o(()=>[e("SoundBank")]),_:1})]),O]),t("tr",null,[F,t("td",null,[n(l,{to:"/en/Components/SoundBank.html"},{default:o(()=>[e("SoundBank")]),_:1})]),H])])])])}const Y=r(s,[["render",I],["__file","ArcadeCar.html.vue"]]),$=JSON.parse('{"path":"/en/Components/ArcadeCar.html","title":"ArcadeCar","lang":"en-US","frontmatter":{"category":["Components","Vehicle"],"head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://ravenfieldcommunity.github.io/docs/cn/Components/ArcadeCar.html"}],["meta",{"property":"og:url","content":"https://ravenfieldcommunity.github.io/docs/en/Components/ArcadeCar.html"}],["meta",{"property":"og:site_name","content":"Ravenfield Documents"}],["meta",{"property":"og:title","content":"ArcadeCar"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-19T08:38:54.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-19T08:38:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ArcadeCar\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-19T08:38:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Description","slug":"description","link":"#description","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Comment","slug":"comment","link":"#comment","children":[]},{"level":2,"title":"Variables","slug":"variables","link":"#variables","children":[]}],"git":{"createdTime":1700383134000,"updatedTime":1700383134000,"contributors":[{"name":"Leafx-code","email":"82655578+Leafx-code@users.noreply.github.com","commits":1}]},"filePathRelative":"en/Components/ArcadeCar.md","localizedDate":"November 19, 2023"}');export{Y as comp,$ as data};
