import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as o,a as i,b as n,d as l,w as c,e as s}from"./app-b87366cb.js";const u={},r=s(`<h1 id="otr-3-mutators" tabindex="-1"><a class="header-anchor" href="#otr-3-mutators" aria-hidden="true">#</a> otr.3 Mutators</h1><h2 id="_1-0-环境配置" tabindex="-1"><a class="header-anchor" href="#_1-0-环境配置" aria-hidden="true">#</a> -1.0 环境配置</h2><p><strong>此处不再详细说明，如果你有看过相关编程语言的教程，对下面的事情你应该会很快上手</strong></p><p><strong>详情请参考官方文档</strong></p><ol><li>安装VSCode</li><li>安装Chinese-Simple语言扩展包</li><li>安装vscode-lua扩展</li><li>安装C#扩展</li><li>安装EditorConfig for VS Code扩展</li><li>配置工作区的.vscode\\settings.json为：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;files.associations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;*.txt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lua&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;files.exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;**/*.meta&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>配置VSCode为Unity的外部编辑器</li></ol><h2 id="_0-0-想" tabindex="-1"><a class="header-anchor" href="#_0-0-想" aria-hidden="true">#</a> 0.0 想！</h2><p>现在我们先想一下我们的Mutators有什么功能</p><p>例如我们本次的示例Mutators载具快速修复，他应该有：</p><ul><li>基本的修复载具，每次修复35%</li><li>有冷却时间</li><li>防止修复载具后载具健康超过最大值</li><li>防止通过暂停游戏跳过修复时间</li><li>显示修复状态与健康</li><li>有音效</li><li>可以使用附加Alt键防止键位冲突</li><li>修复时不可操作载具(载具内有队友时除外)</li></ul><p>然后我们再简单想一下脚本的运行逻辑与可以供玩家在游戏中调整的数值，方便实际敲代码(可以跳过)</p>`,12),k=s(`<p>在本实例中，公开的可以供玩家在游戏中调整的数值：冷却时间、修复时间、激活键、是否使用Alt键、每次修复载具最大健康的%</p><p>计划的运行逻辑：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Start() &gt; local化自定义选项与本地变量(如果数值不符合要求或为空则填充默认数值)

Update() &gt; 当游戏未暂停时冷却计时器累加时间到变量self.deltaTime；
如果玩家按下激活键且不处于冷却状态且驾驶载具中，则将变量self.Repairing变量设置为Ture，否则打印报错信息到屏幕；
当self.Repairing为Ture时且游戏未暂停时，修复时间计时器累加时间到变量self.repairingDeltaTime并播放循环音效，打印修复剩余时间到屏幕，当载具只有玩家一个人时阻止玩家操作载具；
当self.rpairingDeltaTime大于玩家设置的修复时间，则修复载具的%，并打印修复的健康到屏幕，重置所有计时器，停止播放音效，重新允许玩家操作载具
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们可以正式开始了!</p><h2 id="_1-0-unity内简单配置" tabindex="-1"><a class="header-anchor" href="#_1-0-unity内简单配置" aria-hidden="true">#</a> 1.0 Unity内简单配置</h2><p>在打代码之前，我们先在Unity配置一下Mutators的预制件()的Mod导出设置</p><p>场景内新建一个空物体，添加ScriptedBehaviour组件，游戏中这个物体下的所有东西都会被实例化</p><p>新建一个TXT(Ravenscrpit)文件，把这个文件托入组件内的source，Behaviour处填写TXT的文件名</p><p>预制件化这个物体，在Mutator Content Mod配置</p><h2 id="_1-1-撸码" tabindex="-1"><a class="header-anchor" href="#_1-1-撸码" aria-hidden="true">#</a> 1.1 撸码</h2><p>首先您需要明白如何为脚本对应找到合适的Api: 提取功能中的关键字，如“载具” &gt; Vehicle 然后到文档的Api索引查找相关方法、member，如我们可以在Player这个类中找到可以获取玩家活动载具的menber Player.Actor.activeVehicle 如果找不到合适的方法，可以尝试关键词搜索，如果还找不到。那就是乌鸦没写估计，只能另辟蹊径</p><p>然后复制一份</p><p>您最后的成品应该看着像这样</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">behaviour</span><span class="token punctuation">(</span><span class="token string">&quot;QuickRepair&quot;</span><span class="token punctuation">)</span>  <span class="token comment">--注册Ravenscript行为</span>

<span class="token comment">--以下的变量均为局部变量，无法从外界访问</span>
<span class="token keyword">local</span> deltaTime <span class="token operator">=</span> <span class="token number">0</span>   <span class="token comment">--初始化冷却计时器</span>
<span class="token keyword">local</span> repairDeltaTime <span class="token operator">=</span> <span class="token number">0</span>   <span class="token comment">--初始化修理时间计时器</span>
<span class="token keyword">local</span> repairTime  <span class="token comment">--初始化修理所需时间</span>
<span class="token keyword">local</span> colddown
<span class="token keyword">local</span> isRepairing    <span class="token comment">--初始化&quot;是否正在维修&quot;状态</span>
<span class="token keyword">local</span> oldVehicleHealth   <span class="token comment">--初始化未维修前的载具健康</span>
<span class="token keyword">local</span> keybind   <span class="token comment">--初始化激活键</span>
<span class="token keyword">local</span> useAlt   <span class="token comment">--初始化&quot;是否使用Alt键&quot;</span>
<span class="token keyword">local</span> repairRange    <span class="token comment">--初始化要维修载具健康的百分比</span>
<span class="token keyword">local</span> mutators     <span class="token comment">--初始化与脚本绑定的Mutators</span>
<span class="token keyword">local</span> isRuning     <span class="token comment">--初始化Mutator状态</span>
<span class="token keyword">local</span> audioSource
<span class="token keyword">local</span> audioSourceVolume

<span class="token keyword">function</span> QuickRepair<span class="token punctuation">:</span><span class="token function">AddListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> isRuning <span class="token operator">==</span> Ture <span class="token keyword">then</span>
        <span class="token keyword">if</span> useAlt <span class="token operator">==</span> Ture <span class="token keyword">then</span>  <span class="token comment">--A</span>
            <span class="token keyword">function</span> QuickRepair<span class="token punctuation">:</span><span class="token function">Listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">GetKey</span><span class="token punctuation">(</span>KeyCode<span class="token punctuation">.</span>Alt<span class="token punctuation">)</span> <span class="token keyword">then</span>
                    <span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">GetKeyDown</span><span class="token punctuation">(</span>keybind<span class="token punctuation">)</span> <span class="token keyword">then</span>
                        <span class="token keyword">if</span> deltaTime <span class="token operator">&gt;=</span> colddown <span class="token keyword">then</span>
                            isRepairing <span class="token operator">=</span> Ture
                        <span class="token keyword">end</span>
                    <span class="token keyword">end</span>
                <span class="token keyword">end</span>
            <span class="token keyword">end</span>
    <span class="token keyword">else</span>   <span class="token comment">--B</span>
            <span class="token keyword">function</span> QuickRepair<span class="token punctuation">:</span><span class="token function">Listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> Input<span class="token punctuation">.</span><span class="token function">GetKeyDown</span><span class="token punctuation">(</span>keybind<span class="token punctuation">)</span> <span class="token keyword">then</span>
                    <span class="token keyword">if</span> deltaTime <span class="token operator">&gt;=</span> colddown <span class="token keyword">then</span>
                        isRepairing <span class="token operator">=</span> Ture
                    <span class="token keyword">end</span>
                <span class="token keyword">end</span>
            <span class="token keyword">end</span>
    <span class="token keyword">end</span>      
<span class="token keyword">end</span>

<span class="token keyword">function</span> QuickRepair<span class="token punctuation">:</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">--在进入游戏游戏时运行一次，用于将游戏设置载入变量</span>
    coroutine<span class="token punctuation">.</span><span class="token function">yield</span><span class="token punctuation">(</span><span class="token function">WaitForSeconds</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">--延迟运行确保mutators设置加载成功</span>
    mutators <span class="token operator">=</span> ScriptedBehaviour<span class="token punctuation">.</span>mutator
    <span class="token keyword">if</span> mutators <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>   <span class="token comment">--如果无法读取设置，则报错并禁用Mutators</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;[QuickRepair]Couldn&#39;t find mutator setting,check mod plz.&quot;</span><span class="token punctuation">)</span>
        isRuning <span class="token operator">=</span> Flase
    <span class="token keyword">else</span>  <span class="token comment">--如果可以读取设置，则导入设置</span>
        isRuning <span class="token operator">=</span> Ture
        <span class="token function">AddListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> mutators<span class="token punctuation">.</span><span class="token function">GetConfigurationFloat</span><span class="token punctuation">(</span>epairTime<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>
            repairTime <span class="token operator">=</span> <span class="token number">10</span>
        <span class="token keyword">else</span>
            repairTime <span class="token operator">=</span> mutators<span class="token punctuation">.</span><span class="token function">GetConfigurationFloat</span><span class="token punctuation">(</span>repairTime<span class="token punctuation">)</span>
        <span class="token keyword">if</span> mutators<span class="token punctuation">.</span>mutators<span class="token punctuation">.</span><span class="token function">GetConfigurationString</span><span class="token punctuation">(</span>keybind<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>
            keybind <span class="token operator">=</span> <span class="token string">&#39;\`&#39;</span>
        <span class="token keyword">else</span>
            keybind <span class="token operator">=</span> mutators<span class="token punctuation">.</span><span class="token function">GetConfigurationString</span><span class="token punctuation">(</span>keybind<span class="token punctuation">)</span>
        audioSource <span class="token operator">=</span> self<span class="token punctuation">.</span>target<span class="token punctuation">.</span>audioSource<span class="token punctuation">.</span>GameObject<span class="token punctuation">.</span>GetComponent<span class="token operator">&lt;</span>AudioSource<span class="token operator">&gt;</span>
        audioSourceVolume <span class="token operator">=</span> audioSource<span class="token punctuation">.</span>AudioSource<span class="token punctuation">.</span>volume
        audioSource<span class="token punctuation">.</span>AudioSource<span class="token punctuation">.</span>volume <span class="token operator">=</span> <span class="token number">0</span>
        useAlt <span class="token operator">=</span> mutators<span class="token punctuation">.</span><span class="token function">GetConfigurationBool</span><span class="token punctuation">(</span>useAlt<span class="token punctuation">)</span>
        repairRange <span class="token operator">=</span> mutators<span class="token punctuation">.</span><span class="token function">GetConfigurationRange</span><span class="token punctuation">(</span>repairRange<span class="token punctuation">)</span>
        <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> QuickRepair<span class="token punctuation">:</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> isRuning <span class="token operator">==</span> Ture <span class="token keyword">then</span>
            <span class="token keyword">if</span> GameManeger<span class="token punctuation">.</span>isPaused <span class="token operator">==</span> Flase <span class="token keyword">then</span>
                    deltaTime <span class="token operator">=</span><span class="token operator">+</span> Time<span class="token punctuation">.</span>deltaTime  <span class="token comment">--计时器累加时间</span>
                    <span class="token function">Listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> isRepairing <span class="token keyword">then</span>
                        <span class="token keyword">if</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>
                            Overlay<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token string">&quot;[QuickRepair]No vehicle is active!&quot;</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span>
                            isRepairing <span class="token operator">=</span> Flase
                    <span class="token keyword">else</span>
                        repairDeltaTime <span class="token operator">=</span><span class="token operator">+</span> Time<span class="token punctuation">.</span>deltaTime
                        Overlay<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token string">&quot;[QuickRepair]Remaining&quot;</span> <span class="token operator">+</span> repairTime<span class="token operator">-</span>repairDeltaTime<span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>
                        <span class="token keyword">if</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>team <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>   <span class="token comment">--当载具只有玩家一个人时阻止玩家操作载具</span>
                            Player<span class="token punctuation">.</span>allowMouseLook <span class="token operator">=</span> Flase
                            Screen<span class="token punctuation">.</span><span class="token function">UnlockCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token keyword">end</span>
                    <span class="token keyword">end</span>
                    <span class="token keyword">if</span> repairDeltaTime <span class="token operator">&gt;=</span> repairTime <span class="token keyword">then</span>
                        oldVehicleHealth <span class="token operator">=</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>health
                        <span class="token keyword">if</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>health <span class="token operator">+</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>maxHealth <span class="token operator">*</span> repairRange <span class="token operator">&gt;&gt;</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>maxHealth <span class="token keyword">then</span>
                            Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>health <span class="token operator">=</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>maxHealth
                        <span class="token keyword">else</span>
                            Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span><span class="token function">Repair</span><span class="token punctuation">(</span>Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>maxHealth <span class="token operator">*</span> repairRange<span class="token punctuation">)</span>
                        Overlay<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token string">&quot;[QuickRepair]Success,Repaired&quot;</span> <span class="token operator">+</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>health<span class="token operator">-</span>oldVehicleHealth <span class="token operator">+</span><span class="token string">&#39;/&#39;</span><span class="token operator">+</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>health<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>
                        isRepairing <span class="token operator">=</span> Flase
                        deltaTime <span class="token operator">=</span> <span class="token number">0</span>
                        repairDeltaTime <span class="token operator">=</span> <span class="token number">0</span>
                        Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>isDead <span class="token operator">=</span> Flase
                        <span class="token keyword">if</span> Player<span class="token punctuation">.</span>allowMouseLook <span class="token operator">==</span> Flase <span class="token keyword">then</span>
                            Player<span class="token punctuation">.</span>allowMouseLook <span class="token operator">=</span> Ture
                            Screen<span class="token punctuation">.</span><span class="token function">LockCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token keyword">end</span>
                    <span class="token keyword">end</span>
                    <span class="token keyword">if</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>isDead <span class="token operator">==</span> Ture <span class="token keyword">then</span>
                        Overlay<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token string">&quot;[QuickRepair]Player is died!&quot;</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span>
                        isRepairing <span class="token operator">==</span> Flase
                        deltaTime <span class="token operator">=</span> <span class="token number">0</span>
                    <span class="token keyword">end</span>
                    <span class="token keyword">if</span> Player<span class="token punctuation">.</span>Actor<span class="token punctuation">.</span>activeVehicle<span class="token punctuation">.</span>isDead <span class="token operator">==</span> Ture <span class="token keyword">then</span>
                        Overlay<span class="token punctuation">.</span><span class="token function">ShowMessage</span><span class="token punctuation">(</span><span class="token string">&quot;[QuickRepair]Vehicle is  too bad,can&#39;t repair!&quot;</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span>
                        isRepairing <span class="token operator">==</span> Flase
                        deltaTime <span class="token operator">=</span> <span class="token number">0</span>
                    <span class="token keyword">end</span>
            <span class="token keyword">end</span>
     <span class="token keyword">end</span>
<span class="token keyword">end</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function d(v,m){const a=t("RouterLink");return p(),o("div",null,[r,i("p",null,[n("在这之前，如果您不了解诸如Start()以及实际开发中可以调用的方法，请自行查阅RCR的"),l(a,{to:"/Documents/Ravenscrpit/"},{default:c(()=>[n("RS文档")]),_:1}),n("（或Unity文档，基本通用），此处不再赘述")]),k])}const h=e(u,[["render",d],["__file","otr.3.html.vue"]]);export{h as default};
