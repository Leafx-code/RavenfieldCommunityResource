import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o,c,a as h,b as e,d as i,w as s,e as t}from"./app-16df54ed.js";const n={},l=t('<h1 id="scriptedbehaviour" tabindex="-1"><a class="header-anchor" href="#scriptedbehaviour" aria-hidden="true">#</a> ScriptedBehaviour</h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>将自定义的Ravenscrpit脚本实例化到游戏物体上</p><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h2><p>附加在目标游戏物体</p>',5),u=t('<h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>source</td><td>TextAsset</td><td>Ravenscrpit脚本</td></tr><tr><td>behaviour</td><td>string</td><td>要使用的行为名（可留空，在文件名与脚本注册的behaviour名一致的情况下可以自动匹配）</td></tr><tr><td>targets</td><td>class.NamedTarget[]</td><td>要在脚本内使用的target物体(<code>Size</code>=数量。先填写<code>Size</code>，再在<code>Element</code>里配置target，<code>name</code>=要给这个target定义的id，value=目标物体)</td></tr></tbody></table>',3);function p(_,b){const a=d("RouterLink");return o(),c("div",null,[l,h("p",null,[e("参见"),i(a,{to:"/cn/Tutorials/"},{default:s(()=>[e("RFCreator Project")]),_:1})]),u])}const v=r(n,[["render",p],["__file","ScriptedBehaviour.html.vue"]]);export{v as default};
