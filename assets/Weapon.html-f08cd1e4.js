import{_ as e,X as r,Y as o,a2 as a}from"./framework-43ac3942.js";const t={},l=a('<h1 id="weapon" tabindex="-1"><a class="header-anchor" href="#weapon" aria-hidden="true">#</a> Weapon</h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h2><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><p>| HaltStrategy | enum | (Auto, Never, PreferredLongRange, PreferredAnyRange, AlwaysLongRange, Always) |<br> | Effectiveness | enum | (No, Yes, Preferred) |<br> | ReflectionSound | enum | (Auto, None, Handgun, RifleSmall, RifleLarge, Launcher, Tank) |<br> | thirdPersonTransform | Transform | |<br> | thirdPersonOffset | Vector3 | |<br> | cullInThirdPerson | GameObject[] | |<br> | thirdPersonScale | float | |<br> | configuration | Configuration | |<br> | reloadAudio | AudioSource | |<br> | changeFireModeAudio | AudioSource | |<br> | reflectionSound | ReflectionSound | |<br> | reflectionVolume | float | |<br> | walkBobMultiplier | float | |<br> | sprintBobMultiplier | float | |<br> | proneBobMultiplier | float | |<br> | uiSprite | Sprite | |<br> | arms | SkinnedMeshRenderer | |<br> | allowArmMeshReplacement | bool | |<br> | parentWeapon | Weapon | |<br> | useParentWeaponSightModes | bool | |<br> | holdingFire | bool | |<br> | reloading | bool | |<br> | unholstered | bool | |<br> | switchedFromSubWeapon | bool | |<br> | ammo | int | |<br> | activeSubWeaponIndex | int | |<br> | activeSightModeIndex | int | |<br> | isLocked | bool | |<br> | auto | bool | |<br> | ammo | int | |<br> | spareAmmo | int | |<br> | resupplyNumber | int | |<br> | reloadTime | float | |<br> | cooldown | float | |<br> | unholsterTime | float | |<br> | unholsterIsReload | bool | |<br> | changeFireModeTime | float | |<br> | changeFireModeIsReload | bool | |<br> | aimFov | float | |<br> | forceSniperAimSensitivity | bool | |<br> | aimSensitivityMultiplier | float | |<br> | autoReloadDelay | float | |<br> | canBeAimedWhileReloading | bool | |<br> | forceAutoReload | bool | |<br> | loud | bool | |<br> | forceWorldAudioOutput | bool | |<br> | muzzles | Transform[] | |<br> | optionalThirdPersonMuzzles | Transform[] | |<br> | casingParticles | ParticleSystem[] | |<br> | fireFromAllMuzzles | bool | |<br> | projectilesPerShot | int | |<br> | projectilePrefab | GameObject | |<br> | scopeAimObject | GameObject | |<br> | kickback | float | |<br> | randomKick | float | |<br> | spread | float | |<br> | followupSpreadGain | float | |<br> | followupMaxSpreadHip | float | |<br> | followupMaxSpreadAim | float | |<br> | followupSpreadStayTime | float | |<br> | followupSpreadDissipateTime | float | |<br> | snapMagnitude | float | |<br> | snapDuration | float | |<br> | snapFrequency | float | |<br> | kickbackProneMultiplier | float | |<br> | spreadProneMultiplier | float | |<br> | followupSpreadProneMultiplier | float | |<br> | snapProneMultiplier | float | |<br> | aiAllowedAimSpread | float | |<br> | aiAimSwing | float | |<br> | effInfantry | Effectiveness | |<br> | effInfantryGroup | Effectiveness | |<br> | effUnarmored | Effectiveness | |<br> | effArmored | Effectiveness | |<br> | effAir | Effectiveness | |<br> | effAirFastMover | Effectiveness | |<br> | effectiveRange | float | |<br> | haltStrategy | HaltStrategy | |<br> | pose | int | |<br> | applyHeat | bool | |<br> | heatMaterial | MaterialTarget | |<br> | heatGainPerShot | float | |<br> | heatDrainRate | float | |<br> | heatColor | Color | |<br> | heatColorGain | AnimationCurve | |<br> | overheatParticles | ParticleSystem | |<br> | overheatSound | AudioSource | |<br> | useChargeTime | bool | |<br> | chargeTime | float | |<br> | chargeSound | AudioSource | |<br> | dropAmmoWhenReloading | bool | |<br> | maxRemainingAmmoAfterDrop | int | |<br> | useMaxAmmoPerReload | bool | |<br> | maxAmmoPerReload | int | |<br> | advancedReload | bool | |<br> | allowedReloads | int[] | |<br> | sightModes | SightMode[] | |<br> | overrideFov | bool | |<br> | fov | float | |<br> | name | string | |</p>',6),i=[l];function n(b,f){return r(),o("div",null,i)}const s=e(t,[["render",n],["__file","Weapon.html.vue"]]);export{s as default};
