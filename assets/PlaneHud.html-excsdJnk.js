import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as l,c as d,a as e,d as r,w as o,e as i,b as u}from"./app-JntOLF8T.js";const c={},h=i('<h1 id="planehud" tabindex="-1"><a class="header-anchor" href="#planehud" aria-hidden="true">#</a> PlaneHud</h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><p>用于监视在游戏中实时监控飞机的各项数值并应用到UI物体</p><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h2><p>随意，建议挂载在UI父物体顶层</p><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><p>如果没有指定plane，组件会指定寻找所绑定的父物体飞机</p><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2>',8),s=e("thead",null,[e("tr",null,[e("th",null,"名称"),e("th",null,"类型"),e("th",null,"描述")])],-1),_=e("td",null,"plane",-1),p=e("td",null,"目标监控飞机",-1),m=e("tr",null,[e("td",null,"gearIndicator"),e("td",null,"GameObject.Indicator"),e("td",null,"起落架状态(ready=准备好时显示的UI物体, waiting=忙时显示的UI物体)")],-1),b=e("tr",null,[e("td",null,"airbrakeIndicator"),e("td",null,"GameObject.Indicator"),e("td",null,"减速板状态(当飞机的vector.y小于-0.3时触发ready，否则为waiting。ready=准备好时显示的UI物体, waiting=忙时显示的UI物体)")],-1),f=e("tr",null,[e("td",null,"countermeasureIndicator"),e("td",null,"GameObject.Indicator"),e("td",null,"热诱弹状态(ready=准备好时显示的UI物体, waiting=装弹时显示的UI物体)")],-1),x=e("tr",null,[e("td",null,"speedLabel"),e("td",null,"Text"),e("td",null,"显示速度的Text物体（纯数字，会覆盖原文本）")],-1),I=e("tr",null,[e("td",null,"altitudeLabel"),e("td",null,"Text"),e("td",null,"显示海拔的Text物体（纯数字，会覆盖原文本）")],-1);function U(w,y){const t=n("RouterLink");return l(),d("div",null,[h,e("table",null,[s,e("tbody",null,[e("tr",null,[_,e("td",null,[r(t,{to:"/cn/Components/Airplane.html"},{default:o(()=>[u("Airplane")]),_:1})]),p]),m,b,f,x,I])])])}const T=a(c,[["render",U],["__file","PlaneHud.html.vue"]]);export{T as default};
