import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as d,c,a as e,d as a,b as n,w as r,e as i}from"./app-HrgAR07r.js";const u={},p=e("h1",{id:"ravenscript-idea",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ravenscript-idea","aria-hidden":"true"},"#"),n(" Ravenscript IDEA")],-1),h={style:{"text-align":"center"}},m=e("p",null,[e("img",{src:"https://img.shields.io/github/issues/RavenfieldCommunity/ravenscript.svg?style=flat-square&",alt:"GitHub issues"}),n(),e("img",{src:"https://img.shields.io/github/last-commit/RavenfieldCommunity/ravenscript.svg?style=flat-square&",alt:"GitHub last commit"})],-1),v={href:"https://github.com/RavenfieldCommunity/ravenscript/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"},b=e("img",{src:"https://img.shields.io/badge/授权基于许可-GPLv3-lightblue.svg?style=for-the-badge&",alt:"License"},null,-1),_={href:"https://github.com/RavenfieldCommunity/ravenscript/",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h2><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>✅ 基本完整、简单易用的snippet

✅ 用户annotation支持

✅ 本体与前置Framework在开发支持期内

✅ 多IDE兼容

❌ 稀烂的self指针与register(behaviour注册、local变量注入与同步的基本不可用)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>本插件支持Luals与[Emmylua](https:\\emmylua.github.io)（仅兼容）两个前置扩展，即支持VSCode、Neovim、JetBrainsIDEA至少四个IDEA（当然如果你会写LSP还能自行支持更多），此处推荐使用[Luals](https:\\luals.github.io)</p><h3 id="快速安装-仅vscode" tabindex="-1"><a class="header-anchor" href="#快速安装-仅vscode" aria-hidden="true">#</a> 快速安装(仅VSCode)</h3>`,5),g={href:"https://marketplace.visualstudio.com/items?itemName=sumneko.lua",target:"_blank",rel:"noopener noreferrer"},f=e("img",{src:"https://img.shields.io/badge/VS Code-Install-blue?style=for-the-badge&logo=visualstudiocode",alt:"Install in VS Code",title:"Install in VS Code"},null,-1),E=e("p",null,[n("完成后，打开任意一个Lua文件，右键单击选择“打开插件管理器”或Ctrl+P打开命令面板输入“"),e("code",null,">lua.addon_manager.open"),n("”")],-1),x=e("p",null,"等待插件管理器从Github拉取完插件（可能需要本机安装了git并可以访问Github，然后在插件列表找到”Ravenscript IDEA”并启用（Enable），然后尽情享用我们带给你的snippet体验吧~",-1),O=e("h3",{id:"本地安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#本地安装","aria-hidden":"true"},"#"),n(" 本地安装")],-1),y=e("p",null,"如果你使用的是其他的IDE或你无法使用插件管理器时你才应选择此方式",-1),D=e("p",null,"应该没人用其他的吧？ψ(._. )> 有需要再给我们留言吧",-1),R=e("h2",{id:"用法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#用法","aria-hidden":"true"},"#"),n(" 用法")],-1),A=e("p",null,"由于前置扩展与我的开发经验不成熟，因此您在早期开发rs脚本时需遵循以下步骤",-1),C=e("h3",{id:"关联文件类型",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#关联文件类型","aria-hidden":"true"},"#"),n(" 关联文件类型")],-1),I=e("p",null,"这个我就不用多说了吧？rs脚本用的是txt文件，那你就在IDE里把txt扩展名的文件跟Lua语言关联起来，这样才能使用Lua扩展开发rs",-1),N={href:"https://blog.csdn.net/u012433546/article/details/100566579",target:"_blank",rel:"noopener noreferrer"},F=i(`<h3 id="注册脚本" tabindex="-1"><a class="header-anchor" href="#注册脚本" aria-hidden="true">#</a> 注册脚本</h3><p>在开始每一项rs脚本的开发前，你需要在工作区（如打开的文件夹，这个概念不懂请自行查找，或者说在扩展的设置里定义全局使用以下文件）另行先创建一个文件如下（此处实例文件名为<code>exampleWorker.lua</code>,文件名随意）：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@meta</span>

<span class="token comment">---@class TO_DEF: Behaviours </span>
TO_DEF2 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">---@type float</span>
    a<span class="token operator">=</span>ANY<span class="token punctuation">,</span>
	b<span class="token operator">=</span>ANY
<span class="token punctuation">}</span>

<span class="token function">rawset</span><span class="token punctuation">(</span>_G<span class="token punctuation">,</span><span class="token string">&quot;YOUR_BEHAVIOUR_NAME&quot;</span><span class="token punctuation">,</span>TO_DEF2<span class="token punctuation">)</span>

<span class="token comment">--此处的重复代表可以在同一文件里定义多个behaviour</span>
<span class="token comment">---@class TO_DEF_X: Behaviours </span>
TO_DEF_X2 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">---@type float</span>
    a<span class="token operator">=</span>ANY<span class="token punctuation">,</span>
	b<span class="token operator">=</span>ANY
<span class="token punctuation">}</span>

<span class="token function">rawset</span><span class="token punctuation">(</span>_G<span class="token punctuation">,</span><span class="token string">&quot;YOUR_BEHAVIOUR_NAME_X&quot;</span><span class="token punctuation">,</span>TO_DEF_X2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>---@meta</code>标记只需在文件中出现一次，表示文件在工作区全局启用</p><p><code>---@class TO_DEF: Behaviours </code>指从<code>Behaviour</code>这个类派生一个一个<code>TO_DEF</code>的类（和下文的<code>TO_DEF2</code>一样可为其他名称但不可重复，<code>TO_DEF2</code>这个变量用于代<code>TO_DEF</code>这个类。仅作临时用）</p><p>下面<code>TO_DEF2</code>里填写的是编写rs脚本时你要在self指针里用的变量（因此可留空，但不可缺少<code>TO_DEF2 = {}</code>）,<code>ANY</code>做占位符，其上的<code>---@type float</code>指这个变量的类型为float（可选）</p><p>最后<code>rawset(_G,&quot;YOUR_BEHAVIOUR_NAME&quot;,TO_DEF2)</code>里<code>YOUR_BEHAVIOUR_NAME</code>填写你rs脚本里在<code>behaviour()</code>里注册的行为名，<code>TO_DEF2</code>指上文定义的变量</p><p>现在你就可以把这个文件放一边，开始编写这个rsjiaob了</p><h3 id="手动定义类型" tabindex="-1"><a class="header-anchor" href="#手动定义类型" aria-hidden="true">#</a> 手动定义类型</h3><p>有时扩展不能自动判断一个变量的类型，需要手动定义，下方示例中的<code>---@type GameObject</code>就是声明这个变量<code>a</code>的类型是GameObject：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@type GameObject</span>
a <span class="token operator">=</span> self<span class="token punctuation">.</span>targets<span class="token punctuation">.</span>canvas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动定义function回传参数类型与返回值" tabindex="-1"><a class="header-anchor" href="#手动定义function回传参数类型与返回值" aria-hidden="true">#</a> 手动定义function回传参数类型与返回值</h3><p>当你添加一个事件监听时，扩展不能自动辨别回传参数的类型，，需要手动定义，下方示例中的<code>---@param value int</code>就是声明这个参数<code>value</code>的类型是int：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param value int</span>
<span class="token keyword">function</span> test<span class="token punctuation">:</span> <span class="token function">OnValueChanged</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如下，<code>---@return bool</code>声明这个function的返回值是bool：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@return bool</span>
<span class="token keyword">function</span> test<span class="token punctuation">:</span> <span class="token function">Calc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="鸣谢-贡献项目" tabindex="-1"><a class="header-anchor" href="#鸣谢-贡献项目" aria-hidden="true">#</a> 鸣谢&amp;贡献项目</h2><p>我估计没有外部贡献者，所以还没打算写贡献指南呢...如果你想帮助我们贡献项目，你可以给我们提issue、留下评论在本站评论区或[Steam评论区](https:\\steamcommunity.com)，我会加紧事件赶贡献文档，或吸取你的建议修bug和完善插件</p><h2 id="❤捐助" tabindex="-1"><a class="header-anchor" href="#❤捐助" aria-hidden="true">#</a> ❤捐助</h2><p>虽然很不想说，但确实，开发这个插件所费精力确实大，我也难以分配太多事件维护，因此如果你想帮助我们，欢迎在爱发电给我们一点小小的捐助（别包月哈，不值得。但是好像就是包月？）：</p>`,20),L={href:"https://afdian.net/a/Nsrc233",target:"_blank",rel:"noopener noreferrer"},T=e("img",{src:"https://img.shields.io/badge/爱发电-支持我们！-lightpurple.svg?style=for-the-badge&",alt:"License"},null,-1),V=e("p",null,"或者说更简单，在Steam工坊给我们一个赞，让我们看到你们的热情❤",-1);function w(B,G){const s=t("ExternalLinkIcon"),o=t("RouterLink");return d(),c("div",null,[p,e("div",h,[m,e("p",null,[e("a",v,[b,a(s)])]),e("p",null,[n("项目地址："),e("a",_,[n("Github"),a(s)])])]),k,e("p",null,[n("首先安装Luals for vscode的扩展 "),e("a",g,[f,a(s)])]),E,x,O,y,e("p",null,[n("无法访问github就参考"),a(o,{to:"/cn/RESOURCE.html"},{default:r(()=>[n("资源镜像")]),_:1})]),D,R,A,C,I,e("p",null,[n("请自行上网查找，如"),e("a",N,[n("VSCode中txt文件关联Lua"),a(s)])]),F,e("p",null,[e("a",L,[T,a(s)])]),V])}const Y=l(u,[["render",w],["__file","rsidea.html.vue"]]);export{Y as default};
