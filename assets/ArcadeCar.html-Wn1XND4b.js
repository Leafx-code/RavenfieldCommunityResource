import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as a,c as u,a as t,b as l,d as n,w as d}from"./app-HrgAR07r.js";const i={},s=t("h1",{id:"arcadecar",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#arcadecar","aria-hidden":"true"},"#"),l(" ArcadeCar")],-1),c=t("h2",{id:"description",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),l(" Description")],-1),_=t("p",null,"Vehicle with physical driving effects",-1),h=t("h2",{id:"usage",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#usage","aria-hidden":"true"},"#"),l(" Usage")],-1),f=t("p",null,"Please add the Rigidbody component yourself, or you will get an error!",-1),p=t("h2",{id:"comment",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#comment","aria-hidden":"true"},"#"),l(" Comment")],-1),g=t("h2",{id:"variables",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),l(" Variables")],-1),m=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Type"),t("th",null,"Description")])],-1),b=t("tr",null,[t("td",null,"reverseTurnType"),t("td",null,"enum.ReverseTurnType"),t("td",null,"(Reverse Speed,Reverse Throttle,Never)")],-1),k=t("tr",null,[t("td",null,"acceleration"),t("td",null,"float"),t("td",null,"acceleration")],-1),v=t("tr",null,[t("td",null,"reverseAcceleration"),t("td",null,"float"),t("td",null,"Reverse acceleration")],-1),y=t("tr",null,[t("td",null,"accelerationTipAmount"),t("td",null,"float"),t("td",null,"Accelerated tilt level")],-1),D=t("tr",null,[t("td",null,"frictionTipAmount"),t("td",null,"float"),t("td",null,"Degree of brake tilt")],-1),S=t("tr",null,[t("td",null,"topSpeed"),t("td",null,"float"),t("td",null,"Maximum speed")],-1),T=t("tr",null,[t("td",null,"speedTurnTorque"),t("td",null,"float"),t("td",null,"Degree of steering by speed")],-1),A=t("tr",null,[t("td",null,"baseTurnTorque"),t("td",null,"float"),t("td",null,"steering level")],-1),B=t("tr",null,[t("td",null,"tankTurning"),t("td",null,"bool"),t("td",null,"Enable tank steering (steering in place)")],-1),x=t("tr",null,[t("td",null,"slideDrag"),t("td",null,"float"),t("td",null,"Lateral resistance")],-1),C=t("tr",null,[t("td",null,"brakeDrag"),t("td",null,"float"),t("td",null,"Brake Resistance")],-1),R=t("tr",null,[t("td",null,"driftByAcceleration"),t("td",null,"bool"),t("td",null,"Accelerated drift (really didn't feel like it was that noticeable)")],-1),V=t("tr",null,[t("td",null,"brakeAccelerationTriggerSpeed"),t("td",null,"float"),t("td",null,"Minimum trigger speed for brake drift")],-1),w=t("tr",null,[t("td",null,"driftByBrake"),t("td",null,"bool"),t("td",null,"Enable brake-drift")],-1),N=t("tr",null,[t("td",null,"brakeDriftMinSpeed"),t("td",null,"float"),t("td",null,"Brake Drift Minimum Speed")],-1),M=t("tr",null,[t("td",null,"driftingSlip"),t("td",null,"float"),t("td")],-1),E=t("tr",null,[t("td",null,"driftDuration"),t("td",null,"float"),t("td",null,"Drift Duration")],-1),L=t("tr",null,[t("td",null,"isAmphibious"),t("td",null,"bool"),t("td",null,"The vehicle is amphibious.")],-1),q=t("tr",null,[t("td",null,"extraStability"),t("td",null,"float"),t("td",null,"Additional stability (affects center of gravity)")],-1),P=t("tr",null,[t("td",null,"groundDrag"),t("td",null,"float"),t("td",null,"ground resistance")],-1),G=t("tr",null,[t("td",null,"groundAngularDrag"),t("td",null,"float"),t("td",null,"ground angular resistance")],-1),U=t("tr",null,[t("td",null,"groundSteeringDrag"),t("td",null,"float"),t("td",null,"Ground steering resistance")],-1),j=t("tr",null,[t("td",null,"airDrag"),t("td",null,"float"),t("td",null,"atmospheric drag")],-1),z=t("tr",null,[t("td",null,"airAngularDrag"),t("td",null,"float"),t("td",null,"Angular resistance of air (acting on angular velocity?)")],-1),F=t("tr",null,[t("td",null,"downforcePerSpeed"),t("td",null,"float"),t("td",null,"Downward force that varies by velocity (velocity, directional, not speed)")],-1),H=t("td",null,"suspensionShiftSounds",-1),I=t("td",null,"Suspended sound effects",-1),J=t("td",null,"brakeSounds",-1),K=t("td",null,"Brake Sound",-1);function O(Q,W){const e=r("RouterLink");return a(),u("div",null,[s,c,t("p",null,[l("Derived from "),n(e,{to:"/en/Components/Vehicle.html"},{default:d(()=>[l("Vehicle")]),_:1})]),_,h,t("p",null,[l("Refer "),n(e,{to:"/en/Components/Vehicle.html"},{default:d(()=>[l("Vehicle")]),_:1})]),f,p,g,t("table",null,[m,t("tbody",null,[b,k,v,y,D,S,T,A,B,x,C,R,V,w,N,M,E,L,q,P,G,U,j,z,F,t("tr",null,[H,t("td",null,[n(e,{to:"/en/Components/SoundBank.html"},{default:d(()=>[l("SoundBank")]),_:1})]),I]),t("tr",null,[J,t("td",null,[n(e,{to:"/en/Components/SoundBank.html"},{default:d(()=>[l("SoundBank")]),_:1})]),K])])])])}const Z=o(i,[["render",O],["__file","ArcadeCar.html.vue"]]);export{Z as default};
